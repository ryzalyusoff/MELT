/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package melt.View;

import melt.View.AddQuestion;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import static melt.View.AddQuestion.driver;
import static melt.View.AddQuestion.password;
import static melt.View.AddQuestion.url;
import static melt.View.AddQuestion.user;
import melt.Util.SQLHelper;

/**
 *
 * @author ryzal_000
 */
public class EditQuestion extends javax.swing.JFrame {

    public String questionID;
    
    public String question = "";
    
    private Connection con;
    private Statement st;
    private ResultSet rs;
    
    public int answerID1 = 0;
    public int answerID2 = 0;
    public int answerID3 = 0;
    public int answerID4 = 0;
    public int answerID5 = 0;
    public int answerID6 = 0;
    
    private AddQuestion AddQuestionPanel;

    public static String url;
    public static String user;
    public static String password;
    public static String driver;
    
    public void startSQL() {
        try {

            InputStream in = this.getClass().getResourceAsStream("/melt/Util/jdbc.properties");
            Properties pp = new Properties();
            pp.load(in);
            url = pp.getProperty("jdbc.url");
            user = pp.getProperty("jdbc.username");
            password = pp.getProperty("jdbc.password");
            driver = pp.getProperty("jdbc.driver");

        } catch (IOException ex) {
            Logger.getLogger(SQLHelper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void connectDb() {
        startSQL(); 
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection(url, user, password);
            
            st = con.createStatement();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * Creates new form startupPanel
     */
    public EditQuestion() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        startupPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        questionField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        answer1 = new javax.swing.JTextField();
        answer2 = new javax.swing.JTextField();
        answer3 = new javax.swing.JTextField();
        answer4 = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        answer5 = new javax.swing.JTextField();
        answer6 = new javax.swing.JTextField();
        choice1 = new javax.swing.JCheckBox();
        choice2 = new javax.swing.JCheckBox();
        choice3 = new javax.swing.JCheckBox();
        choice5 = new javax.swing.JCheckBox();
        choice4 = new javax.swing.JCheckBox();
        choice6 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel4.setText("Correct Answer");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startupPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Question"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Question :");

        questionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Answer   :");

        answer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer1ActionPerformed(evt);
            }
        });

        answer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer2ActionPerformed(evt);
            }
        });

        answer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer3ActionPerformed(evt);
            }
        });

        answer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer4ActionPerformed(evt);
            }
        });

        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        answer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer5ActionPerformed(evt);
            }
        });

        answer6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer6ActionPerformed(evt);
            }
        });

        jLabel3.setText("Correct Answer");

        jLabel5.setText("Answer Text");

        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startupPanelLayout = new javax.swing.GroupLayout(startupPanel);
        startupPanel.setLayout(startupPanelLayout);
        startupPanelLayout.setHorizontalGroup(
            startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(startupPanelLayout.createSequentialGroup()
                            .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(startupPanelLayout.createSequentialGroup()
                                    .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(choice6)
                                        .addComponent(choice5)
                                        .addComponent(choice4)
                                        .addComponent(choice3)
                                        .addComponent(choice2)
                                        .addComponent(choice1))
                                    .addGap(34, 34, 34)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(answer1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(questionField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(answer2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(answer3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(answer4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(answer6, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(answer5, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(startupPanelLayout.createSequentialGroup()
                            .addComponent(updateBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1)))
                    .addGroup(startupPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel5)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        startupPanelLayout.setVerticalGroup(
            startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startupPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(questionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(40, 40, 40)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice2)
                    .addComponent(answer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice3))
                .addGap(31, 31, 31)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice4)
                    .addComponent(answer4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(27, 27, 27)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(answer6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(startupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startupPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startupPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void questionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_questionFieldActionPerformed

    private void answer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer1ActionPerformed

    private void answer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer2ActionPerformed

    private void answer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer3ActionPerformed

    private void answer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer4ActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        //System.out.println("Queston is: "+questionField.getText());
        
        this.question = questionField.getText();
 
        //System.out.println("Queston is: "+question);
        
        try  {
            
            connectDb();
             
             //String sql = "SELECT * FROM questions WHERE id='"+rowID+"' ";
             
            int errors = 0;
            
           
             
             String sql1 = "";
             String sql2 = "";
             String sql3 = "";
             String sql4 = "";
             String sql5 = "";
             String sql6 = "";
             
             int isSelected = 0;
            
            if (choice1.isSelected()) {
                sql1 = "UPDATE mcqoption SET Content='"+answer1.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID1+"' ";
                isSelected ++;
            } else {
                 sql1 = "UPDATE mcqoption SET Content='"+answer1.getText()+"' WHERE MCQOption_ID='"+answerID1+"' ";
            }
            
            if (choice2.isSelected()) {
                sql2 = "UPDATE mcqoption SET Content='"+answer2.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID2+"' ";
                isSelected ++;
            } else {
                sql2 = "UPDATE mcqoption SET Content='"+answer2.getText()+"' WHERE MCQOption_ID='"+answerID2+"' ";
            }
            
            if (choice3.isSelected()) {
                 sql3 = "UPDATE mcqoption SET Content='"+answer3.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID3+"' ";
                isSelected ++;
            } else {
                sql3 = "UPDATE mcqoption SET Content='"+answer3.getText()+"' WHERE MCQOption_ID='"+answerID3+"' ";
            }
            
            if (choice5.isSelected()) {
                sql4 = "UPDATE mcqoption SET Content='"+answer4.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID4+"' ";
                isSelected ++;
            } else {
                sql4 = "UPDATE mcqoption SET Content='"+answer4.getText()+"' WHERE MCQOption_ID='"+answerID4+"' ";
            }
            
            if (choice4.isSelected()) {
                sql5 = "UPDATE mcqoption SET Content='"+answer5.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID5+"' ";
                isSelected ++;
            } else {
                sql5 = "UPDATE mcqoption SET Content='"+answer5.getText()+"' WHERE MCQOption_ID='"+answerID5+"' ";
            }
            
            if (choice6.isSelected()) {
                sql6 = "UPDATE mcqoption SET Content='"+answer6.getText()+"', isAnswerOrNot='1' WHERE MCQOption_ID='"+answerID6+"' "; 
                isSelected ++;
            } else {
                sql6 = "UPDATE mcqoption SET Content='"+answer6.getText()+"' WHERE MCQOption_ID='"+answerID6+"' ";
            }
            
            int emptycounter = 0;
            
            if (!answer1.getText().equals("")) { emptycounter++;} 
            if (!answer2.getText().equals("")) { emptycounter++;}
            if (!answer3.getText().equals("")) { emptycounter++;}
            if (!answer4.getText().equals("")) { emptycounter++;}
            if (!answer5.getText().equals("")) { emptycounter++;}
            if (!answer6.getText().equals("")) { emptycounter++;}
            
            
            
            if (!this.question.equals("")) {
                
                if (emptycounter >= 2 ){
               //System.out.println("Answer is:" + emptycounter);

                     if ( isSelected > 0 )    {
  
                           String sql = "UPDATE mcq SET Question_Text='"+this.question+"' WHERE Question_id='"+questionID+"'";
                            int rows = st.executeUpdate(sql);
                            if(rows == 0) {
                               errors++;
                            }
                         
                          /////////////// UPDATE the answers to DB  //////////////// 
                            rows = st.executeUpdate(sql1);
                            if(rows == 0) {
                               errors++;
                            }

                            rows = st.executeUpdate(sql2);
                            if(rows == 0) {
                               errors++;
                            }

                            rows =  st.executeUpdate(sql3);
                            if(rows == 0) {
                               errors++;
                            }

                            rows =  st.executeUpdate(sql4);
                            if(rows == 0) {
                               errors++;
                            }

                            rows =  st.executeUpdate(sql5);
                            if(rows == 0) {
                               errors++;
                            }

                            rows =  st.executeUpdate(sql6);
                            if(rows == 0) {
                               errors++;
                            }

                           if (errors == 0) {
                              JOptionPane.showMessageDialog(null, "Question was successfully updated!");
                           } else {
                               JOptionPane.showMessageDialog(null, "ERROR in updating question!!", "error", JOptionPane.ERROR_MESSAGE);
                           }
                         

                    } else {
                        JOptionPane.showMessageDialog(null, "Please select at least one correct answer!", "error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Please fill in at least 2 answers!", "error", JOptionPane.ERROR_MESSAGE);
                }
                
            } else {
                JOptionPane.showMessageDialog(null, "Please enter the question!", "error", JOptionPane.ERROR_MESSAGE);
            }
           
   
        }  catch (Exception exc) {
            exc.printStackTrace();
        }
        
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void answer5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer5ActionPerformed

    private void answer6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField answer1;
    public javax.swing.JTextField answer2;
    public javax.swing.JTextField answer3;
    public javax.swing.JTextField answer4;
    public javax.swing.JTextField answer5;
    public javax.swing.JTextField answer6;
    public javax.swing.JCheckBox choice1;
    public javax.swing.JCheckBox choice2;
    public javax.swing.JCheckBox choice3;
    public javax.swing.JCheckBox choice4;
    public javax.swing.JCheckBox choice5;
    public javax.swing.JCheckBox choice6;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton4;
    public javax.swing.JTextField questionField;
    private javax.swing.JPanel startupPanel;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
